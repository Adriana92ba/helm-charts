kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "disk-usage-exporter.fullname" . }}
  labels:
    {{- include "disk-usage-exporter.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app: {{ template "disk-usage-exporter.name" . }}
        release: {{ .Release.Name }}
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
          command:
            - disk-usage-exporter
          ports:
            - name: metrics
              containerPort: {{ .Values.service.internalPort }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: {{ .Values.service.internalPort }}
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: {{ .Values.service.internalPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
              # It is important that mountPath is '/rootfs', since
              # disk-usage-exporter uses that hard-coded value to filter the
              # partitions returned by psutil.disk_partitions().
            - mountPath: /rootfs
              name: rootfs
      volumes:
        - name: rootfs
          hostPath:
            path: /
