apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      containers:
      {{- with .Values.nginx }}
      - name: nginx
        image: "{{ .image.repository }}:{{ .image.tag }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        command:
        - nginx
        - -c
        - /nginx/nginx.conf
        - -g
        - daemon off;
        volumeMounts:
        - name: config-volume
          subPath: nginx.conf
          mountPath: /nginx/nginx.conf
          readOnly: true
        - name: config-volume
          subPath: robots.txt
          mountPath: /nginx/robots.txt
          readOnly: true
        resources:
{{ toYaml .resources | indent 10 }}
      {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.internalPort }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10
      {{- with .Values.tornado }}
      - name: tornado
        image: "{{ .image.repository }}:{{ .image.tag }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        command: 
        - gosu
        - www-data
        - invoke
        - server
        env:
        - name: ENV
          value: kube
        volumeMounts:
        - name: secret-volume
          subPath: settings.json
          mountPath: /home/.cos/mfr-kube.json
          readOnly: true
        - name: localcache-volume
          mountPath: /tmp/mfrlocalcache
        resources:
{{ toYaml .resources | indent 10 }}
      {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.externalPort }}
      {{- with .Values.unoconv }}
      - name: unoconv
        image: "{{ .image.repository }}:{{ .image.tag }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        command:
        - gosu
        - www-data
        - /opt/libreoffice4.4/program/python
        - -u
        - /usr/bin/unoconv
        - --listener
        - --server
        - 0.0.0.0
        - --port
        - '2002'
        - -vvv
        ports:
        - name: unoconv
          containerPort: 2002
        volumeMounts:
        - name: localcache-volume
          mountPath: /tmp/mfrlocalcache
        resources:
{{ toYaml .resources | indent 10 }}
      {{- end }}
      volumes:
      - name: localcache-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: {{ template "fullname" . }}
      - name: secret-volume
        secret:
          secretName: {{ template "fullname" . }}
