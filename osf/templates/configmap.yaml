apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "osf.fullname" . }}
  labels:
    app: {{ template "osf.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
{{- define "osf.inlineconfigs" }}
{{- $osfPreprints := (index .Values "osf-preprints") }}
{{- $osfRegistries := (index .Values "osf-registries") }}
{{- $osfReviews := (index .Values "osf-reviews") }}
{{- $osfWeb := (index .Values "osf-web") }}
default.conf: ''
admin-nginx.conf: |-
  user nginx;
  worker_processes 1;

  {{- range .Values.admin.nginx.modules }}
  load_module {{ . }};
  {{- end }}

  error_log /var/log/nginx/error.log warn;
  pid /var/run/nginx.pid;

  events {
      worker_connections 1024;
  }

  http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $upstream_cache_status $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      server_tokens off;

      gzip on;
      gzip_disable "MSIE [1-6]\.(?!.*SV1)";
      gzip_comp_level 2;
      gzip_min_length 512;
      gzip_proxied any;
      gzip_vary on;
      gzip_types text/plain text/css image/svg+xml application/javascript application/x-javascript text/xml application/xml text/javascript application/json application/xml+rss application/vnd.api+json;

      server {
          listen {{ .Values.admin.service.internalPort }};
          server_name _;

          client_max_body_size 25M;
          keepalive_timeout 15;

          root /static/code;

          if ($http_x_forwarded_proto = "http") {
              return 301 https://$host$request_uri;
          }

          location = /healthz {
              access_log off;
              return 200;
          }

          location /robots.txt {
              alias /usr/share/nginx/html/robots.txt;
          }

          location /static {
              alias /static/code/admin;
          }

          include /etc/nginx/conf.d/*.conf;

          location / {
              # Disable caching of application requests
              add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
              add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
              add_header Pragma "no-cache";

              # Pass requests to uwsgi application
              include /etc/nginx/uwsgi_params;
              uwsgi_buffering off;
              uwsgi_request_buffering off;
              uwsgi_pass uwsgi://127.0.0.1:{{ .Values.admin.service.externalPort }};
          }
      }
  }
api-nginx.conf: |-
  user nginx;
  worker_processes 1;

  {{- range .Values.api.nginx.modules }}
  load_module {{ . }};
  {{- end }}

  error_log /var/log/nginx/error.log warn;
  pid /var/run/nginx.pid;

  events {
      worker_connections 1024;
  }

  http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $upstream_cache_status $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      server_tokens off;

      gzip on;
      gzip_disable "MSIE [1-6]\.(?!.*SV1)";
      gzip_comp_level 2;
      gzip_min_length 512;
      gzip_proxied any;
      gzip_vary on;
      gzip_types text/plain text/css image/svg+xml application/javascript application/x-javascript text/xml application/xml text/javascript application/json application/xml+rss application/vnd.api+json;

      server {
          listen {{ .Values.api.service.internalPort }};
          server_name _;

          client_max_body_size 25M;
          keepalive_timeout 15;

          root /static/code;

          if ($http_x_forwarded_proto = "http") {
              return 301 https://$host$request_uri;
          }

          location = /healthz {
              access_log off;
              return 200;
          }

          location /robots.txt {
              alias /usr/share/nginx/html/robots.txt;
          }

          location /favicon.ico {
              alias /static/code/website/static/favicon.ico;
          }

          location /v2/static {
              alias /static/code/api/static/vendor;
          }

          include /etc/nginx/conf.d/*.conf;

          location / {
              # Disable caching of application requests
              add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
              add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
              add_header Pragma "no-cache";

              # Pass requests to uwsgi application
              include /etc/nginx/uwsgi_params;
              uwsgi_buffering off;
              uwsgi_request_buffering off;
              uwsgi_pass uwsgi://127.0.0.1:{{ .Values.api.service.externalPort }};
          }
      }
  }
web-nginx-osf-preprints.conf: |-
  location ~* ^/preprints/(?!(\w+/download|\w+/\w+/download)/?$).* {
      {{- if .Values.prerender.enabled }}
      include /etc/nginx/prerender.conf;
      {{- end }}

      rewrite ^/preprints/(.*)$ /$1 break;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://{{ $osfPreprints.service.name }}:{{ $osfPreprints.service.externalPort }};
  }
web-nginx-osf-registries.conf: |-
  location /registries/ {
      {{- if .Values.prerender.enabled }}
      include /etc/nginx/prerender.conf;
      {{- end }}

      rewrite ^/registries/(.*)$ /$1 break;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://{{ $osfRegistries.service.name }}:{{ $osfRegistries.service.externalPort }};
  }
web-nginx-osf-reviews.conf: |-
  location /reviews/ {
      {{- if .Values.prerender.enabled }}
      include /etc/nginx/prerender.conf;
      {{- end }}

      rewrite ^/reviews/(.*)$ /$1 break;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://{{ $osfReviews.service.name }}:{{ $osfReviews.service.externalPort }};
  }
web-nginx-osf-web.conf: |-
  location /quickfiles/ {
      {{- if .Values.prerender.enabled }}
      include /etc/nginx/prerender.conf;
      {{- end }}

      rewrite ^/quickfiles/(.*)$ /$1 break;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://{{ $osfWeb.service.name }}:{{ $osfWeb.service.externalPort }};
  }
web-nginx-prerender.conf: |-
  set $prerender 0;

  if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
      set $prerender 1;
  }

  if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
  }

  if ($http_user_agent ~ "Prerender") {
      set $prerender 0;
  }

  if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
      set $prerender 0;
  }

  if ($prerender = 1) {
      rewrite .* /https://$host$request_uri? break;
      proxy_pass http://{{ .Values.prerender.service.name }}:{{ .Values.prerender.service.externalPort }};
  }
web-nginx.conf: |-
  user nginx;
  worker_processes 1;

  {{- range .Values.web.nginx.modules }}
  load_module {{ . }};
  {{- end }}

  error_log /var/log/nginx/error.log warn;
  pid /var/run/nginx.pid;

  events {
      worker_connections 1024;
  }

  http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $upstream_cache_status $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      server_tokens off;

      gzip on;
      gzip_disable "MSIE [1-6]\.(?!.*SV1)";
      gzip_comp_level 2;
      gzip_min_length 512;
      gzip_proxied any;
      gzip_vary on;
      gzip_types text/plain text/css image/svg+xml application/javascript application/x-javascript text/xml application/xml text/javascript application/json application/xml+rss application/vnd.api+json;

      {{- if .Values.web.nginx.cache.enabled }}
      ##
      # Caching Settings
      ##
      
      # Pull cache-busting key out of query string
      map $args $args_first {
          default $args;
          ~^(?<first>.*?)&?_=\d+ $first;
      }
      map $args $args_rest {
          default "";
          ~^\?_=\d+&?(?<rest>.*)$ $rest;
          ~_=\d+(?<rest>.*)$ $rest;
      }
      
      uwsgi_cache_path /cache/uwsgi keys_zone=osf_uwsgi_cache:10m inactive=120m;
      uwsgi_temp_path /cache/uwsgi-temp;
      
      proxy_cache_path /cache/proxy keys_zone=osf_proxy_cache:10m inactive=120m;
      proxy_temp_path /cache/proxy-temp;
      {{- end }}

      server {
          listen {{ .Values.web.service.internalPort }};
          server_name _;

          client_max_body_size 25M;
          keepalive_timeout 15;

          {{- if .Values.web.nginx.cache.enabled }}
          uwsgi_cache osf_uwsgi_cache;
          proxy_cache osf_proxy_cache;
          {{- end }}

          root /static/code;

          if ($http_x_forwarded_proto = "http") {
              return 301 https://$host$request_uri;
          }

          location = /healthz {
              access_log off;
              return 200;
          }

          location /robots.txt {
              alias /usr/share/nginx/html/robots.txt;
          }

          location ~ /static/addons/(.*?)/(.*) {
              alias /static/code/addons/$1/static/$2;
          }

          location /static/ {
              alias /static/code/website/static/;
          }

          include /etc/nginx/conf.d/*.conf;

          # # SHARE
          # location /share/docs {
          #     proxy_pass https://staging-share-registration.osf.io/api/v1/share/data/help;
          #
          #     proxy_set_header Host $host;
          #     proxy_set_header X-Real-IP $remote_addr;
          #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #     proxy_set_header X-Forwarded-Host $host;
          #     proxy_set_header X-Forwarded-Proto https;
          # }
          #
          # # SHARE
          # location /api/v1/share/data {
          #     proxy_pass https://staging-share-registration.osf.io/api/v1/share/data;
          #
          #     proxy_redirect off;
          #     proxy_set_header Host $host;
          #     proxy_set_header X-Real-IP $remote_addr;
          #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #     proxy_set_header X-Forwarded-Host $host;
          #     proxy_set_header X-Forwarded-Proto https;
          # }
          #
          # # SHARE
          # location /api/v1/share/documents/ {
          #     rewrite /api/v1/share/documents(.*) /documents$1 break;
          #     proxy_pass https://staging-share.osf.io;
          # }

          location / {
              {{- if .Values.web.nginx.cache.enabled }}
              set $agent_monitor 0;
              if ($http_user_agent ~* "(haproxy monitoring|rackspace monitoring|varnish)") {
                  set $agent_monitor 1;
              }
              # Caching configuration
              uwsgi_cache_valid 200 1m;
              uwsgi_cache_key $host$uri$args_first$args_rest;
              # Default cache methods, specified for clarity.
              uwsgi_cache_methods GET HEAD;
              # Skip cache when:
              # - logged in
              # - using basic auth
              # - view-only link
              # - hmac signed
              # - waterbutler provider
              # - monitoring agent
              uwsgi_cache_bypass $cookie_osf $http_authorization $arg_view_only $arg_signature $arg_provider $arg_render $agent_monitor;
              uwsgi_no_cache $cookie_osf $http_authorization $arg_view_only $arg_signature $arg_provider $arg_render $agent_monitor;
              uwsgi_cache_lock on;
              uwsgi_cache_lock_timeout 30s;
              uwsgi_cache_use_stale updating;
              {{- end }}

              # Disable caching of application requests
              add_header Cache-Control "no-cache, no-store, max-age=0, must-revalidate";
              add_header Expires "Mon, 01 Jan 1990 00:00:00 GMT";
              add_header Pragma "no-cache";

              {{- if .Values.prerender.enabled }}
              include /etc/nginx/prerender.conf;
              {{- end }}

              # Pass requests to uwsgi application
              include /etc/nginx/uwsgi_params;
              uwsgi_buffering off;
              uwsgi_request_buffering off;
              uwsgi_pass uwsgi://127.0.0.1:{{ .Values.web.service.externalPort }};

              # URL rewrites
              rewrite "^/project/.*?/node/(.*)" https://$host/$1 permanent;
              rewrite "^/project/([a-zA-Z0-9]{5,}.*)" https://$host/$1 permanent;
              rewrite "^/profile/([a-zA-Z0-9]{5,})" https://$host/$1 permanent;
          }
      }
  }
{{- end -}}
{{- range $key, $value := .Values.configEnvs }}
  {{ $key }}: {{ $value | quote }}
{{- end }}
{{- range $key, $value := merge .Values.configFiles (merge (include "osf.inlineconfigs" . | fromYaml) ((.Files.Glob "files/*").AsConfig | fromYaml)) }}
  {{ $key }}: |-
{{ $value | indent 4 }}
{{- end }}
