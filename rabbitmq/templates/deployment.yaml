apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "rabbitmq.fullname" . }}
  labels:
    app: {{ template "rabbitmq.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "rabbitmq.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "rabbitmq.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: RABBITMQ_USERNAME
              value: {{ .Values.username | quote }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "rabbitmq.fullname" . }}
                  key: password
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ template "rabbitmq.fullname" . }}
                  key: erlangCookie
            - name: RABBITMQ_NODE_PORT_NUMBER
              value: {{ .Values.service.ports.amqp | quote }}
            - name: RABBITMQ_NODE_TYPE
              value: {{ .Values.nodeType | quote }}
            - name: RABBITMQ_NODE_NAME
              value: {{ printf "%s@%s" .Values.nodeName "localhost" | quote }}
            - name: RABBITMQ_CLUSTER_NODE_NAME
              value: {{ .Values.clusterNodeName | quote }}
            - name: RABBITMQ_VHOST
              value: {{ .Values.vhost | quote }}
            - name: RABBITMQ_MANAGER_PORT_NUMBER
              value: {{ .Values.service.ports.stats | quote }}
          ports:
            {{- range $name, $port := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ $port }}
            {{- end }}
          livenessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            initialDelaySeconds: 120
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - rabbitmqctl
                - status
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /bitnami/rabbitmq
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "rabbitmq.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
