## Bitnami RabbitMQ image version
## ref: https://hub.docker.com/r/bitnami/rabbitmq/tags/
##
image:
  repository: bitnami/rabbitmq
  tag: 3.6.12-r0
  pullPolicy: IfNotPresent

## RabbitMQ application username
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
##
username: ''

## RabbitMQ application password
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq/blob/master/README.md#creating-a-database-user-on-first-run
##
# password:

## Erlang cookie to determine whether different nodes are allowed to communicate with each other
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
##
# erlangCookie:

## Node Type
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
##
nodeType: stats

## Node Name
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
##
nodeName: rabbit

## Node name to cluster with. e.g.: `clusternode@hostname`
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
##
clusterNodeName: ''

## RabbitMQ application vhost
## ref: https://github.com/bitnami/bitnami-docker-rabbitmq#environment-variables
##
vhost: /

## Kubernetes service type
serviceType: ClusterIP

service:
  #annotations: {}
  type: ClusterIP
  # If using type: LoadBalancer
  #loadBalacerIP: 0.0.0.0
  ports:
    empd: 4369
    amqp: 5672
    dist: 25672
    stats: 15672

persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## rabbitmq data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ''
  accessMode: ReadWriteOnce
  size: 8Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 100m
