apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.master.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "master.fullname" . }}
spec:
  serviceName: {{ template "master.fullname" . }}
  replicas: {{ .Values.master.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        component: "{{ .Values.master.name }}"
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      # and https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html#mlockall
      initContainers:
      - name: sysctl
        image: busybox
        imagePullPolicy: Always
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        env:
        - name: SERVICE
          value: {{ template "master.fullname" . }}
        - name: KUBERNETES_MASTER
          value: kubernetes.default.svc.cluster.local
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_DATA
          value: "false"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms{{ .Values.master.heapSize }} -Xmx{{ .Values.master.heapSize }}"
        {{- range $key, $value :=  .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
{{ toYaml .Values.master.resources | indent 12 }}
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        ports:
        - containerPort: 9300
          name: transport
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config
          subPath: logging.yml
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
    {{- if .Values.master.storageClass }}
      storageClassName: "{{ .Values.master.storageClass }}"
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.master.storage }}"
